searchState.loadedDescShard("iota_rust_sdk", 0, "Retrieve result and consume hasher instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRust definitions of move/iota framework types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the underlying byte array of a Address.\nCommitments to checkpoint-specific state (e.g. txns in …\nThe effects produced by executing this transaction\nPresent only on the final checkpoint of the epoch.\nCommitments to epoch specific state (e.g. live object set)\nThe running total gas costs of all transactions included …\nThe number of tokens that were minted (if positive) or …\nThe events, if any, emitted by this transaciton during …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe state of all inputs to this transaction as they were …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTotal number of transactions committed since genesis, …\nnext_epoch_committee is <code>Some</code> if and only if the current …\nThe protocol version that is in effect during the epoch …\nThe state of all output objects created or mutated by this …\nTimestamp of the checkpoint - number of milliseconds from …\nThe input Transaction\nCheckpointSummary is not an evolvable structure - it must …\nA G1 point in BN254 serialized as a vector of three …\nA G2 point in BN254 serialized as a vector of three …\nA claim consists of value and index_mod_4.\nStruct that contains info for a JWK. A list of them for …\nKey to identify a JWK, consists of iss and kid.\nA structured of parsed JWT details, consists of kid, …\nThe length of an bls12381 private key in bytes.\nThe length of an bls12381 public key in bytes.\nThe length of an bls12381 signature key in bytes.\nThe length of an ed25519 private key in bytes.\nThe length of an ed25519 public key in bytes.\nThe length of an ed25519 signature key in bytes.\nThe length of an secp256k1 private key in bytes.\nThe length of an secp256k1 public key in bytes.\nThe length of an secp256k1 signature key in bytes.\nThe length of an secp256r1 private key in bytes.\nThe length of an secp256r1 public key in bytes.\nThe length of an secp256r1 signature key in bytes.\nThe struct that contains signatures and public keys …\nAn passkey authenticator with parsed fields. See field …\nAn zk login authenticator with all the necessary fields.\nAll inputs required for the zk login proof verification …\nThe struct for zk login proof.\nA wrapper struct to retrofit in [enum PublicKey] for …\nAlgorithm parameter, …\nRSA public exponent, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the underlying byte array of an Bls12381PublicKey.\nReturn the underlying byte array of an Bls12381Signature.\nReturn the underlying byte array of an Ed25519PublicKey.\nReturn the underlying byte array of an Ed25519Signature.\nReturn the underlying byte array of an Secp256k1PublicKey.\nReturn the underlying byte array of an Secp256k1Signature.\nReturn the underlying byte array of an Secp256r1PublicKey.\nReturn the underlying byte array of an Secp256r1Signature.\niss string that identifies the OIDC provider.\nkid string that identifies the JWK.\nKey type parameter, …\nRSA modulus, …\nDerive an Address from a MultisigCommittee. A MultiSig …\nDefine as iss_bytes_len || iss_bytes || …\nDefine as iss_bytes_len || iss_bytes || …\nA representation of a 32 byte digest\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShared objects in cancelled transaction. The sequence …\nThe old version, digest and owner.\nDeleted shared objects that appear mutably/owned in the …\nSame definition as in ObjectIn.\nIf an object exists (at root-level) in the store prior to …\nAny written object, including all of mutated, created, …\nPackages writes need to be tracked separately with version …\nRead of a per-epoch config object that should remain the …\nDeleted shared objects that appear as read-only in the …\nRead-only shared objects from the input. We don’t really …\nThe response from processing a transaction or a certified …\nThe response from processing a transaction or a certified …\nAuxiliary data that are not protocol-critical, generated …\nObjects whose state are changed in the object store.\nThe set of transaction digests this transaction depends on.\nThe epoch when this transaction was executed.\nThe digest of the events emitted during execution, can be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe updated gas object reference, as an index into the …\nWhether this object ID is created or deleted in this …\nState of the object in the store prior to this transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe version number of all the written Move objects by this …\nState of the object in the store after this transaction.\nThe status of the execution\nThe transaction digest\nShared objects that are not mutated in this transaction. …\nSpecific type of event\nOwner of the balance change\nThe amount indicate the balance value changes.\nType of the Coin\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAddress is denied for this coin type\nArity mismatch for Move function. The number of arguments …\nCertificate is on the deny list\nCircular Object Ownership\nCoin balance overflowed an u64\nCoin type is globally paused for use\nInvalid command argument\nA type provided did not match the specified constraint\nDigest in upgrade ticket and computed digest differ\nEffects from the transaction are too large\nCertificate is cancelled because randomness could not be …\nCertificate is cancelled due to congestion on shared …\nGas used in the failed case, and the error.\nAttempted to used feature that is not supported yet\nFunction not found\nPackage upgrade is incompatible with previous version\nOut of bounds access to input or results\nRequested shared object has been deleted\nInsufficient coin balance for requested operation\nInsufficient Gas\nInvalid argument to private entry function. Private entry …\nThe argument cannot be deserialized into a value of the …\nInvalid usage of Gas coin. The Gas coin can only be used …\nInvalid Gas Object.\nImmutable objects cannot be passed by mutable reference, …\nImmutable objects cannot be passed by-value.\nInvalid public Move function signature. Unsupported return …\nInvalid usage of result. Expected a single result but …\nInvalid Transfer Object, object does not have public …\nThe argument cannot be instantiated from raw bytes\nInvalid usage of move value.\nInvariant Violation\nIota Move Bytecode Verification Error.\nIota Move Bytecode verification timed out.\nMove runtime abort\nError from a non-abort instruction. Possible causes: …\nNon Entry Function Invoked. Move Call must start with an …\nObject is not a package\nMove object is larger than the maximum allowed size\nPackageId does not matach PackageId in upgrade ticket\nPackage is larger than the maximum allowed size\nInvalid package upgrade\nPublish Error, Non-zero Address. The modules in the …\nPublish or Upgrade dependency downgrade.\nPublish or Upgrade is missing dependency\nOut of bounds access to subresult\nThe requested shared object operation is not allowed\nShared object operations such a wrapping, freezing, or …\nType argument error\nType arity mismatch for Move function. Mismatch between …\nThe type of the value does not match the expected type\nA type was not found in the module specified\nType parameters are encoded as indices. This index can …\nUnable to fetch package\nUpgrade policy is not valid\nUnused result without the drop ability.\nMoveVm invariant violation\nBytecode verification error.\nIndicates the transaction tried to write objects too large …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndex into the code stream for a jump. The offset is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhich command the error occurred\nThe error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSummary of gas charges.\nCost of computation/execution\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet net gas usage, positive number means used gas; …\nThe fee for the rebate. The portion of the storage rebate …\nStorage cost, it’s the sum of all storage cost for all …\nThe amount of storage cost refunded to the user for all …\nAddress Owned\nImmutable\nObject Owned\nType of a Iota object\nMap from each module name to raw serialized Move module …\nMove package containing one or more bytecode modules\nShared Object\nAn object whose governing logic lives in a published Move …\nA Move struct of the given type\nIdentifies a struct and the module it was defined in\nUpgraded package info for the linkage table\nBCS bytes of a Move struct value\nThe meat of the object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe owner that unlocks this object\nThe digest of the transaction that created or last mutated …\nThe amount of IOTA we would rebate if this object gets …\nThe type of this object. Immutable\nMaps struct/module to a package version where it was first …\nId of the upgraded packages\nVersion of the upgraded package\nMost move packages are uniquely identified by their ID …\nNumber that increases each time a tx takes this object as …\nDerive an ObjectId for a Dynamic Child Object.\nCreate an ObjectId from <code>TransactionDigest</code> and <code>count</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn the underlying byte array of an ObjectId\nAn argument to a programmable transaction command\nCancelled transaction version assignment.\nA single command in a programmable transaction.\nEndOfEpochTransaction replaces ChangeEpoch with a list of …\nEndOfEpochTransactionKind\nValidators wont sign a transaction unless the expiration …\nThe gas coin. The gas coin can only be used by-ref, except …\nA system transaction that will update epoch information …\nOne of the input objects or primitive values (from …\n<code>forall T: Vec&lt;T&gt; -&gt; vector&lt;T&gt;</code> Given n-values of the same …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;Coin&lt;T&gt;&gt;)</code> It merges n-coins into the …\nThe command for calling a Move function, either an entry …\nA call to either an entry or a public Move function\nLike a <code>Result</code> but it accesses a nested result. Currently, …\nThe transaction has no expiration\nA series of commands where the results of one command can …\nA transaction that allows the interleaving of native …\nPublishes a Move package. It takes the package bytes and a …\nThe result of another command (from <code>ProgrammableTransaction</code>…\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;u64&gt;)</code> -&gt; <code>Vec&lt;Coin&lt;T&gt;&gt;</code> It splits off …\n<code>(Vec&lt;forall T:key+store. T&gt;, address)</code> It sends n-objects …\nUpgrades a Move package Takes (in order):\nThe arguments to the function.\nThe initial version of the authenticator object that it …\nThe initial version of the authenticator object that it …\nThe commands to be executed sequentially. A failure in any …\nUnix timestamp from consensus\nThe total amount of gas charged for computation during the …\nDigest of consensus output\nStores consensus handler determined shared object version …\nEpoch of the randomness state update transaction\nEpoch of the authenticator state update transaction\nEpoch of the commit prologue transaction\nThe next (to become) epoch ID.\nUnix timestamp when epoch started\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe function to be called.\nInput objects or primitive values\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nexpire JWKs that have a lower epoch than this\nThe specific module in the package containing the function.\nnewly active jwks\nThe non-refundable storage fee.\nThe package containing the module and function.\nThe protocol version in effect in the new epoch.\nUpdated random bytes\nThe initial version of the randomness object that it was …\nRandomness round of the update\nConsensus round of the authenticator state update\nConsensus round of the commit\nThe total amount of gas charged for storage during the …\nThe amount of storage rebate refunded to the txn senders.\nThe sub DAG index of the consensus commit. This field will …\nSystem packages (specifically framework and move stdlib) …\nThe type arguments to the function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if this is a Coin type")